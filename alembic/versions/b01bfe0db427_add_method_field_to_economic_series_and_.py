"""Add method field to economic_series and fix data_collection_log

Revision ID: b01bfe0db427
Revises: 
Create Date: 2025-09-23 18:39:39.939405

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b01bfe0db427'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Adicionar coluna series_name como nullable primeiro
    op.add_column('data_collection_log', sa.Column('series_name', sa.String(length=50), nullable=True))
    
    # Preencher valores NULL com 'UNKNOWN' para dados existentes
    op.execute("UPDATE data_collection_log SET series_name = 'UNKNOWN' WHERE series_name IS NULL")
    
    # Agora tornar a coluna NOT NULL
    op.alter_column('data_collection_log', 'series_name', nullable=False)
    
    # Adicionar outras colunas
    op.add_column('data_collection_log', sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.alter_column('data_collection_log', 'series_code',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.add_column('economic_series', sa.Column('method', sa.String(length=50), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('economic_series', 'method')
    op.alter_column('data_collection_log', 'series_code',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.drop_column('data_collection_log', 'details')
    op.drop_column('data_collection_log', 'series_name')
    # ### end Alembic commands ###
